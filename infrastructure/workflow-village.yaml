main:
    params: [args]
    steps:
        - log1:
            call: sys.log
            args:
                text: $${"Loading card "+json.encode_to_string(args)}
                severity: INFO
        - getCards:
            try:
                call: http.get
                args:
                    url: $${"${cloud_run_url}/states/"+args.state_id+"/districts/"+args.district_id+"/mandals/"+args.mandal_id+"/villages/"+args.id+"/cards?publishable=false&filter_existing=true"}
                    auth:
                        type: OIDC
                result: cards
            retry:
                max_retries: 8
                backoff:
                    initial_delay: 1
                    max_delay: 60
                    multiplier: 2
        - log2:
            call: sys.log
            args:
                text: $${"Loaded "+string(len(cards.body))+ " cards"}
                severity: INFO        
        - checkCardSize:
            switch:
            - condition: $${0 < len(cards.body)}
              steps:      
                - loopCards:
                    for:
                        value: card
                        in: $${cards.body}
                        steps:  
                            - outerLoopAssign:
                                assign:
                                - taskname: $${"${queue_name}/tasks/download_"+card.state_id+"_"+card.district_id+"_"+card.mandal_id+"_"+card.village_id+"_"+text.replace_all(card.sample,"/","_") +"-"+ string(card.sr_no)}
                            - log3:
                                call: sys.log
                                args:
                                    text: $${"Creating task "+taskname}
                                    severity: INFO  
                            - create_task:
                                call: googleapis.cloudtasks.v2.projects.locations.queues.tasks.create
                                args:
                                    parent: ${queue_name}
                                    body:
                                      task:
                                        name: $${taskname}
                                        #scheduleTime: "2014-10-02T15:01:23Z" 
                                        httpRequest:
                                            url: $${"${cloud_run_url_async}/download"}
                                            body: $${base64.encode(json.encode(card))}
                                            httpMethod: "POST"
                                            headers:
                                                Content-Type: "application/json"
                                            oidcToken:
                                                audience: ${cloud_run_url_async}
                                                serviceAccountEmail: ${task_sa}
                            #- publish_message_to_topic:
                            #    call: googleapis.pubsub.v1.projects.topics.publish
                            #    args:
                            #        topic: ${pubsub_topic}
                            #        body:
                            #            messages: 
                            #              - data: $${card.data}